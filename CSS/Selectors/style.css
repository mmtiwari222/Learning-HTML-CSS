/*? 1. Universal Selector */
/** Selects all HTML elements on the page. */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/*? 2. Element Selector or Type Selector */
/** Selects all instances of a specific HTML element type. */
h1 {
    color: aqua;
}

a {
    color: cadetblue;
    text-decoration: none;
}

/*? 3. Class Selector */
/** Selects all elements with the class attribute "container" . */
.container {
    background-color: #f1f1f1;
    padding: 20px;
}

/*? 4. ID Selector */
/** Selects the element with the id attribute "main" . */
#main {
    background-color: #333;
    color: white;
    padding: 20px;
}

/*! Attribute Selectors */
/*? [target] {} */
/** Selects elements that have the 'target' attribute. */

/*? [type="text"] {} */
/** Selects elements where the 'type' attribute is exactly "text". */

/*? [class~="highlight"] {} */
/** Selects elements where the 'class' attribute contains "highlight" as a whole word. */

/*? [lang|="en"] {} */
/** Selects elements where the 'lang' attribute starts with "en" or "en-". */

/*? [href^="https://"] {} */
/** Selects elements where the 'href' attribute value starts with "https://". */

/*? [src$=".png"] {} */
/** Selects elements where the 'src' attribute value ends with ".png". */

/*? [title*="important"] {} */
/** Selects elements where the 'title' attribute value contains "important" anywhere. */
[type="text"] {
    background-color: #0f0101;
    color: aqua;
    width: 100%;
    padding: 10px;
    margin: 10px 0px;
    border: 1px solid #0f0101;
}


/*! 6. Pseudo-class Selector -  */
/*? a:hover {} */
/** Selects <a> elements when the user's mouse pointer is over them. */

/*? :active {} */
/** Selects an element that is being activated by the user (e.g., clicked). */

/*? :focus {} */
/** Selects an element that has received input focus. */

/*? :visited {} */
/** Selects <a> elements for links that the user has already visited. */

/*? :link {} */
/** Selects <a> elements for unvisited links. */

/*? li:first-child {} */
/** Selects the first child element among its siblings. */

/*? li:last-child {} */
/** Selects the last child element among its siblings. */

/*? li:nth-child(n) {} */
/** Selects every 'n'th child element (e.g., odd, even, 2n+1). */

/*? button:not(.disabled) {} */
/** Selects <button> elements that do NOT have the class "disabled". */

/*? :empty {} */
/** Selects elements that have no children (including text nodes). */

/*? :checked {} */
/** Selects checked <input> elements (radio or checkbox). */

/*? :enabled {} */
/** Selects enabled <input> elements. */

/*? :disabled {} */
/** Selects disabled <input> elements. */
a:hover {
    color: red;
}

/*! 7. Pseudo-element Selector */
/*? h2::before {} */
/** Inserts content before the content of an <h2> element. */

/*? a::after {} */
/** Inserts content after the content of an <a> element. */

/*? p::first-line {} */
/** Selects the first formatted line of a <p> element. */

/*? p::first-letter {} */
/** Selects the first letter of a <p> element. */

/*? ::selection {} */
/** Styles the portion of text that is selected by the user. */
p::first-letter {
    color: red;
    font-weight: bold;
}

/*? 8. Descendant Selector */
/** div p {} */
/** Selects all <p> elements that are descendants of a <div> (at any level). */
.container p {
    color: blue;
}

/*? 9. Child Selector */
/** ul>li {} */
/** Selects all <li> elements that are direct children of a <ul>. */
.myContainer>p {
    color: green;
}

/*? 10. Adjacent Sibling Selector */
/** h1+p {} */
/** Selects the first <p> element that immediately follows an <h1>. */
h2+p {
    color: purple;
}

/*? 11. General Sibling Selector */
/** h2~p {} */
/** Selects all <p> elements that are siblings of an <h2> and come after it. */
h2~p {
    color: orange;
}

/*! 12. Grouping Selector */
/*? h2,h3 {} */
/** Selects all <h2>, and <h3> elements. */

h2,
h3 {
    color: brown;
}